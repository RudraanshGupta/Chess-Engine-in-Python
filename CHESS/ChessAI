import random

pieceScore = {"K": 0, "Q": 10, "R": 5, "B": 3, "N": 3, "P": 1, "k": 0, "q": 10, "r": 5, "b": 3, "n": 3, "p": 1}
knightsScore = [[1,1,1,1,1,1,1,1],
                [1,2,2,2,2,2,2,1],
                [1,2,3,3,3,3,2,1],
                [1,2,3,4,4,3,2,1],
                [1,2,3,4,4,3,2,1],
                [1,2,3,3,3,3,2,1],
                [1,2,2,2,2,2,2,1],
                [1,1,1,1,1,1,1,1]]

bishopScore =  [[4,3,2,1,1,2,3,4],
                [3,4,3,2,2,3,4,3],
                [2,3,4,3,3,4,3,2],
                [1,2,3,4,4,3,2,1],
                [1,2,3,4,4,3,2,1],
                [2,3,4,3,3,4,3,2],
                [3,4,3,2,2,3,4,3],
                [4,3,2,1,1,2,3,4]]

queenScore =   [[1,1,1,3,1,1,1,1],
                [1,2,3,3,3,1,1,1],
                [1,4,3,3,3,4,2,1],
                [1,2,3,3,3,2,2,1],
                [1,2,4,4,4,3,2,1],
                [1,4,3,3,3,4,2,1],
                [1,2,3,3,3,1,1,1],
                [1,1,1,3,1,1,1,1]]

rookScore =    [[4,3,4,4,4,4,3,4],
                [4,4,4,4,4,4,4,4],
                [1,4,3,3,3,4,2,1],
                [1,2,3,3,3,2,2,1],
                [1,2,3,4,4,3,2,1],
                [1,4,3,3,3,4,2,1],
                [4,4,4,4,4,4,4,4],
                [4,3,4,4,4,4,3,4]]

whitePawnsScore = [[8,8,8,8,8,8,8,8],
                   [8,8,8,8,8,8,8,8],
                   [5,6,6,7,7,6,6,5],
                   [2,3,3,5,5,3,3,2],
                   [2,3,3,5,5,3,3,2],
                   [1,1,2,3,3,2,1,1],
                   [1,1,1,0,0,1,1,1],
                   [0,0,0,0,0,0,0,0]]

blackPawnsScore = [[0,0,0,0,0,0,0,0],
                   [1,1,1,0,0,1,1,1],
                   [1,1,2,3,3,2,1,1],
                   [2,3,3,5,5,3,3,2],
                   [2,3,3,5,5,3,3,2],
                   [5,6,6,7,7,6,6,5],
                   [8,8,8,8,8,8,8,8],
                   [8,8,8,8,8,8,8,8]]

piecePositionScores = {"N": knightsScore, "B": bishopScore, "Q": queenScore, "R": rookScore, "bp":blackPawnsScore, "wp": whitePawnsScore}
CHECKMATE = 10000
STALEMATE = 0
DEPTH = 4

def findRandomMove(validmoves):
    return validmoves [random.randint(0, len(validmoves)-1)]
